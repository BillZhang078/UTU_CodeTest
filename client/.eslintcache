[{"/Users/meishaonv/Desktop/project/Crypto/client/src/index.js":"1","/Users/meishaonv/Desktop/project/Crypto/client/src/App.js":"2","/Users/meishaonv/Desktop/project/Crypto/client/src/store.js":"3","/Users/meishaonv/Desktop/project/Crypto/client/src/reducers/index.js":"4","/Users/meishaonv/Desktop/project/Crypto/client/src/reducers/currency.js":"5","/Users/meishaonv/Desktop/project/Crypto/client/src/actions/types.js":"6","/Users/meishaonv/Desktop/project/Crypto/client/src/actions/currency.js":"7","/Users/meishaonv/Desktop/project/Crypto/client/src/components/table.js":"8","/Users/meishaonv/Desktop/project/Crypto/client/src/util/api.js":"9","/Users/meishaonv/Desktop/project/Crypto/client/src/components/column.js":"10","/Users/meishaonv/Desktop/project/Crypto/client/src/containers/tableContainer.js":"11"},{"size":432,"mtime":1610257008187,"results":"12","hashOfConfig":"13"},{"size":324,"mtime":1610276297778,"results":"14","hashOfConfig":"13"},{"size":338,"mtime":1610266180734,"results":"15","hashOfConfig":"13"},{"size":122,"mtime":1610266888311,"results":"16","hashOfConfig":"13"},{"size":389,"mtime":1610269174395,"results":"17","hashOfConfig":"13"},{"size":48,"mtime":1610257348055,"results":"18","hashOfConfig":"13"},{"size":380,"mtime":1610415048904,"results":"19","hashOfConfig":"13"},{"size":3248,"mtime":1610449068365,"results":"20","hashOfConfig":"13"},{"size":157,"mtime":1610257492071,"results":"21","hashOfConfig":"13"},{"size":458,"mtime":1610279125027,"results":"22","hashOfConfig":"13"},{"size":961,"mtime":1610450309353,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"kz6ig7",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},"/Users/meishaonv/Desktop/project/Crypto/client/src/index.js",[],["51","52"],"/Users/meishaonv/Desktop/project/Crypto/client/src/App.js",[],"/Users/meishaonv/Desktop/project/Crypto/client/src/store.js",[],"/Users/meishaonv/Desktop/project/Crypto/client/src/reducers/index.js",[],"/Users/meishaonv/Desktop/project/Crypto/client/src/reducers/currency.js",[],"/Users/meishaonv/Desktop/project/Crypto/client/src/actions/types.js",[],"/Users/meishaonv/Desktop/project/Crypto/client/src/actions/currency.js",["53"],"import { GET_CURRENCIES } from './types';\nimport api from '../util/api';\nimport axios from 'axios';\n\nexport const getCurrencies = () => async (dispatch) => {\n  try {\n    const res = await axios.get('api/v1/currencies');\n\n    dispatch({\n      type: GET_CURRENCIES,\n      payload: res.data.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: 'CURRENCY_ERROR',\n    });\n  }\n};\n","/Users/meishaonv/Desktop/project/Crypto/client/src/components/table.js",["54"],"import React, { useMemo } from 'react';\nimport { COLUMNS } from './column';\nimport { useTable, usePagination } from 'react-table';\nimport './table.css';\n\nconst Table = ({ data, ...props }) => {\n  const columns = useMemo(() => COLUMNS, []);\n  const currencyData = useMemo(() => data, []);\n\n  const tabelInstance = useTable(\n    {\n      columns,\n      data: currencyData,\n      initialState: { pageIndex: 0 },\n    },\n    usePagination\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    nextPage,\n    previousPage,\n    canNextPage,\n    pageOptions,\n    gotoPage,\n    pageCount,\n    state,\n    setPageSize,\n    canPreviousPage,\n    prepareRow,\n  } = tabelInstance;\n\n  const { pageIndex, pageSize } = state;\n\n  return (\n    <>\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => {\n            return (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => {\n                  return (\n                    <th {...column.getHeaderProps()}>\n                      {column.render('Header')}\n                    </th>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <div className='page_controler'>\n        <span>\n          Page{' '}\n          <strong>\n            {pageIndex + 1} of {pageOptions.length}\n          </strong>\n        </span>\n        <span>\n          Go to page:{' '}\n          <input\n            type='number'\n            defaultValue={pageIndex + 1}\n            onChange={(e) => {\n              const pageNumber = e.target.value\n                ? Number(e.target.value) - 1\n                : 0;\n              gotoPage(pageNumber);\n            }}\n            style={{ width: '50px' }}\n          />\n        </span>\n\n        <div className='controler_container'>\n          <select\n            className='page_selector'\n            value={pageSize}\n            onChange={(e) => setPageSize(Number(e.target.value))}>\n            {[10, 25, 50].map((pageSize) => {\n              return (\n                <option key={pageSize} value={pageSize}>\n                  Show {pageSize}\n                </option>\n              );\n            })}\n          </select>\n          <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n            {'<<'}\n          </button>\n          <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n            Previous\n          </button>\n          <button onClick={() => nextPage()} disabled={!canNextPage}>\n            Next\n          </button>\n          <button\n            onClick={() => gotoPage(pageCount - 1)}\n            disabled={!canNextPage}>\n            {'>>'}\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Table;\n","/Users/meishaonv/Desktop/project/Crypto/client/src/util/api.js",[],["55","56"],"/Users/meishaonv/Desktop/project/Crypto/client/src/components/column.js",[],"/Users/meishaonv/Desktop/project/Crypto/client/src/containers/tableContainer.js",["57"],"import React, { useEffect } from 'react';\nimport Table from '../components/table';\nimport { connect } from 'react-redux';\nimport { getCurrencies } from '../actions/currency';\nimport loadingImage from '../images/preloader.gif';\n\nconst TableContainer = ({ getCurrencies, Currency, ...props }) => {\n  useEffect(() => {\n    getCurrencies();\n  }, []);\n\n  let NewData = [];\n\n  if (Currency) {\n    NewData = Currency.map((item) => {\n      item.MarketCup = parseInt(item.MarketCap.replace(/,/g, ''));\n      return item;\n    });\n    NewData.sort((a, b) => {\n      return a.MarketCup - b.MarketCup;\n    });\n  }\n  return (\n    <>\n      {Currency ? (\n        <Table data={NewData} />\n      ) : (\n        <img src={loadingImage} className='loading_img' alt='loading' />\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { Currency: state.currency.currencies.currencies };\n};\n\nexport default connect(mapStateToProps, { getCurrencies })(TableContainer);\n",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":11},{"ruleId":"66","severity":1,"message":"67","line":8,"column":44,"nodeType":"68","endLine":8,"endColumn":46,"suggestions":"69"},{"ruleId":"58","replacedBy":"70"},{"ruleId":"60","replacedBy":"71"},{"ruleId":"66","severity":1,"message":"72","line":10,"column":6,"nodeType":"68","endLine":10,"endColumn":8,"suggestions":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'api' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["76"],["74"],["75"],"React Hook useEffect has a missing dependency: 'getCurrencies'. Either include it or remove the dependency array. If 'getCurrencies' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["77"],"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},"Update the dependencies array to be: [data]",{"range":"82","text":"83"},"Update the dependencies array to be: [getCurrencies]",{"range":"84","text":"85"},[283,285],"[data]",[342,344],"[getCurrencies]"]